version: '3.8'

services:
  traefik:
    image: traefik:v2.5
    deploy:
      placement:
        constraints:
          - node.role == manager
      labels:
        - "traefik.enable=true"
      restart_policy:
        condition: on-failure
    ports:
      - target: 80
        published: 80
        protocol: tcp
        mode: host
      - target: 443
        published: 443
        protocol: tcp
        mode: host
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - traefik-certificates:/letsencrypt
    environment:
      - CF_API_EMAIL=akekaluk32@gmail.com
      - CF_DNS_API_TOKEN=4aeVctqj1uFVMhC0W4_-AdZVsL4KJLm9NDCm8Wcj
    command:
      - --providers.docker=true
      - --providers.docker.exposedbydefault=false
      - --providers.docker.swarmmode=true
      - --entrypoints.web.address=:80
      - --entrypoints.websecure.address=:443
      - "--certificatesresolvers.cloudflare.acme.email=akekaluk32@gmail.com"
      - "--certificatesresolvers.cloudflare.acme.storage=/letsencrypt/acme.json"
      - "--certificatesresolvers.cloudflare.acme.httpchallenge=true"
      - "--certificatesresolvers.cloudflare.acme.httpchallenge.entrypoint=web"
      - "--certificatesresolvers.cloudflare.acme.caServer=https://acme-v02.api.letsencrypt.org/directory"
      - --entrypoints.websecure.forwardedheaders.insecure
      - --entrypoints.web.forwardedheaders.insecure

  main-site:
    image: nginx:alpine
    volumes:
      - ./nginx/default.conf:/etc/nginx/conf.d/default.conf
    deploy:
      replicas: 3
      labels:
        - "traefik.enable=true"
        - "traefik.http.routers.main-site.rule=Host(`www.farmingrobotic.com`, `farmingrobotic.com`)"
        - "traefik.http.routers.main-site.entrypoints=websecure"
        - "traefik.http.services.main-site.loadbalancer.server.port=80"
        - "traefik.http.routers.main-site.tls.certresolver=cloudflare"
        - "traefik.http.routers.main-site.tls.domains[0].main=farmingrobotic.com"
        - "traefik.http.routers.main-site.tls.domains[0].sans=www.farmingrobotic.com"
        - "traefik.http.middlewares.secure.headers.sslredirect=true"
        - "traefik.http.middlewares.secure.headers.stsseconds=31536000"
        - "traefik.http.middlewares.secure.headers.stsincludesubdomains=true"
        - "traefik.http.middlewares.secure.headers.stspreload=true"
        - "traefik.http.middlewares.secure.headers.forcestsheader=true"
        - "traefik.http.middlewares.secure.headers.contenttypenosniff=true"
        - "traefik.http.middlewares.secure.headers.browserxssfilter=true"
        - "traefik.http.middlewares.secure.headers.referrerpolicy=strict-origin-when-cross-origin"
        - "traefik.http.routers.main-site.middlewares=secure@docker"
      restart_policy:
        condition: on-failure

  
  ingress:
    image: nginx:alpine
    volumes:
      - ./nginx/ingress.conf:/etc/nginx/conf.d/default.conf
    deploy:
      replicas: 3
      labels:
        - "traefik.enable=true"
        - "traefik.http.routers.ingress.rule=(Host(`www.farmingrobotic.com`, `farmingrobotic.com`) && PathPrefix(`/web`))"
        - "traefik.http.middlewares.ingress-stripprefix.stripprefix.prefixes=/web"
        - "traefik.http.routers.ingress.middlewares=ingress-stripprefix@docker"
        - "traefik.http.routers.ingress.entrypoints=websecure"
        - "traefik.http.services.ingress.loadbalancer.server.port=80"
        - "traefik.http.routers.ingress.tls.certresolver=cloudflare"
        - "traefik.http.routers.ingress.tls.domains[0].main=farmingrobotic.com"
        - "traefik.http.routers.ingress.tls.domains[0].sans=www.farmingrobotic.com"
      restart_policy:
        condition: on-failure

volumes:
  traefik-certificates: