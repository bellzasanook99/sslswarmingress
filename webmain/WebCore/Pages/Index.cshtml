@page
@model IndexModel
<!DOCTYPE html>
<html>
<head>
    <title>อนิเมชั่นอวกาศมินิมอล</title>
    <style>
        body {
            background-color: #000;
            margin: 0;
            overflow: hidden;
            display: flex;
            justify-content: space-around;
            align-items: center;
            height: 100vh;
            font-family: Arial, sans-serif;
        }
        
        .space-container {
            display: flex;
            width: 100%;
            justify-content: space-around;
            align-items: center;
        }
        
        .space {
            position: relative;
            width: 300px;
            height: 300px;
        }
        
        .website-text {
            color: white;
            font-size: 24px;
            text-align: right;
            padding-right: 50px;
            animation: glow 2s ease-in-out infinite alternate;
        }
        
        .planet {
            position: absolute;
            width: 100px;
            height: 100px;
            background: radial-gradient(circle at 30% 30%, #5b9eff, #003366);
            border-radius: 50%;
            top: 50%;
            left: 50%;
            transform: translate(-50%, -50%);
            box-shadow: 0 0 30px #5b9eff;
            animation: shake 5s infinite ease-in-out;
        }
        
        .moon {
            position: absolute;
            width: 30px;
            height: 30px;
            background: #ddd;
            border-radius: 50%;
            top: 30%;
            left: 80%;
            animation: orbit 10s linear infinite, shake 3s infinite ease-in-out;
        }
        
        .star {
            position: absolute;
            background: white;
            border-radius: 50%;
            animation: twinkle 2s infinite alternate;
        }
        
      /* Audio element styling */
        .audio-element {
            display: none;
        }
        
        /* Play overlay */
        .play-overlay {
            position: fixed;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            background-color: rgba(0,0,0,0.9);
            display: flex;
            flex-direction: column;
            justify-content: center;
            align-items: center;
            color: white;
            z-index: 1000;
        }
        
        .play-button {
            padding: 15px 30px;
            font-size: 18px;
            background: #5b9eff;
            color: white;
            border: none;
            border-radius: 5px;
            cursor: pointer;
            margin-top: 20px;
        }
    </style>
</head>
<body>


    <!-- Audio element -->
    <audio id="backgroundMusic" class="audio-element" loop>
         <source src="/music/FristDemo.mp3?v=${Date.now()}" type="audio/mpeg" id="musicSource">
    </audio>

    <!-- Play overlay -->
    <div class="play-overlay" id="playOverlay">
        <h2>Welcome to Our Experience</h2>
        <p>For the best experience, we recommend enabling background music</p>
        <button class="play-button" id="playButton">Enable Audio</button>
    </div>




    <div class="space-container">
        <div class="space">
            <div class="planet"></div>
            <div class="moon"></div>
            <!-- สร้างดาวด้วย JavaScript -->
        </div>
        
        <div class="website-text">farmingrobotic.com</div>
    </div>

    <script>
            document.addEventListener('DOMContentLoaded', function() {
            const audio = document.getElementById('backgroundMusic');
            const playOverlay = document.getElementById('playOverlay');
            const mainContent = document.getElementById('mainContent');
            const playButton = document.getElementById('playButton');
            const musicSource = document.getElementById('musicSource')
            // Set initial volume (optional)
            audio.volume = 0.7;
            
            // Handle play button click
            playButton.addEventListener('click', function() {
                audio.play().then(() => {
                    // Success - hide overlay and show content
                    playOverlay.style.display = 'none';
                    mainContent.style.display = 'flex';
                    
                    // Store preference in localStorage
                    localStorage.setItem('audioPreference', 'enabled');
                }).catch(error => {
                    console.error('Audio playback failed:', error);
                    playButton.textContent = 'Error - Click to Try Again';
                });
            });
            
            // Check if user previously enabled audio
            if (localStorage.getItem('audioPreference') === 'enabled') {
                playButton.click();
            }


               // Function to reload audio with cache busting
        function reloadAudio() {
            musicSource.src = `/music/FristDemo.mp3?v=${Date.now()}`;
            audio.load(); // Force reload the audio element
            return audio.play();
        }
        
        // Handle play button click
        document.getElementById('playButton').addEventListener('click', function() {
            reloadAudio().then(() => {
                // Success handling
            }).catch(error => {
                console.error('Audio playback failed:', error);
            });
        });
            
            // Your existing star generation code
            const space = document.querySelector('.space');
            for (let i = 0; i < 50; i++) {
                const star = document.createElement('div');
                star.classList.add('star');
                const size = Math.random() * 3;
                star.style.width = `${size}px`;
                star.style.height = `${size}px`;
                star.style.left = `${Math.random() * 100}%`;
                star.style.top = `${Math.random() * 100}%`;
                star.style.animationDuration = `${2 + Math.random() * 3}s`;
                space.appendChild(star);
            }
        });
    </script>
</body>
</html>