@page
@model IndexModel
<!DOCTYPE html>
<html>
<head>
    <title>อนิเมชั่นอวกาศมินิมอล</title>
    <style>
        body {
            background-color: #000;
            margin: 0;
            overflow: hidden;
            display: flex;
            flex-direction: column;
            justify-content: center;
            align-items: center;
            height: 100vh;
            font-family: Arial, sans-serif;
        }
        
         .solar-system {
            position: relative;
            width: 100%;
            height: 100%;
            display: flex;
            justify-content: center;
            align-items: center;
        }
        
        /* ดวงอาทิตย์ */
        .sun {
            width: 120px;
            height: 120px;
            background: radial-gradient(circle at 30% 30%, #ffcc00, #ff6600);
            border-radius: 50%;
            box-shadow: 0 0 50px #ff6600;
            position: absolute;
            z-index: 1;
            animation: sun-pulse 8s infinite ease-in-out;
        }
        
        /* วงโคจรของโลก */
        .earth-orbit {
            position: absolute;
            width: 500px;
            height: 500px;
            border: 1px dashed rgba(255, 255, 255, 0.1);
            border-radius: 50%;
            animation: orbit-rotate 40s linear infinite;
        }
        
        /* วงโคจรของดาวพลูโต (ตำแหน่งเดิมของดาวเสาร์) */
        .pluto-orbit {
            position: absolute;
            width: 1000px;
            height: 1000px;
            border: 1px dashed rgba(150, 150, 150, 0.1);
            border-radius: 50%;
            animation: orbit-rotate 200s linear infinite;
        }
        
        /* วงโคจรดาวหางฮัลเลย์ (วงรี) */
        .halley-orbit {
            position: absolute;
            width: 1500px;
            height: 600px;
            border: 1px dashed rgba(100, 200, 255, 0.1);
            border-radius: 50%;
            transform: rotate(-20deg);
            animation: orbit-rotate 120s linear infinite;
        }
        
        /* โลกและดวงจันทร์ */
        .earth-container {
            position: absolute;
            top: -25px;
            left: 50%;
            transform: translateX(-50%);
            width: 100px;
            height: 100px;
        }
        
        .earth {
            width: 50px;
            height: 50px;
            background: radial-gradient(circle at 30% 30%, #5b9eff, #003366);
            border-radius: 50%;
            box-shadow: 0 0 20px #5b9eff;
            position: relative;
            z-index: 2;
            animation: shake 5s infinite ease-in-out;
        }
        
        /* ดวงจันทร์ */
        .moon-orbit {
            position: absolute;
            width: 100px;
            height: 100px;
            border: 1px dashed rgba(255, 255, 255, 0.05);
            border-radius: 50%;
            top: -25px;
            left: -25px;
            animation: orbit-rotate 10s linear infinite;
        }
        
        .moon {
            position: absolute;
            width: 15px;
            height: 15px;
            background: #ddd;
            border-radius: 50%;
            top: -7.5px;
            left: 50%;
            transform: translateX(-50%);
            box-shadow: 0 0 5px rgba(255, 255, 255, 0.5);
        }
        
        /* UFO */
        .ufo {
            position: absolute;
            top: -15px;
            left: 50%;
            transform: translateX(-50%);
            width: 40px;
            height: 20px;
            animation: ufo-float 3s infinite ease-in-out alternate;
        }
        
        .ufo-top {
            width: 40px;
            height: 12px;
            background: radial-gradient(ellipse at center, #00ff00, #009900);
            border-radius: 20px 20px 0 0;
            box-shadow: 0 0 10px #00ff00;
        }
        
        .ufo-bottom {
            width: 30px;
            height: 8px;
            background: linear-gradient(to bottom, #555, #333);
            border-radius: 0 0 15px 15px;
            margin: 0 auto;
            position: relative;
            z-index: 1;
        }
        
        .ufo-light {
            position: absolute;
            width: 6px;
            height: 20px;
            background: linear-gradient(to bottom, rgba(255,255,0,0.8), transparent);
            border-radius: 3px;
            bottom: -20px;
            left: 50%;
            transform: translateX(-50%);
            filter: blur(1px);
        }
        
        /* ดาวเทียม */
        .satellite-orbit {
            position: absolute;
            width: 70px;
            height: 70px;
            border: 1px dashed rgba(0, 255, 255, 0.2);
            border-radius: 50%;
            top: -35px;
            left: -35px;
            animation: orbit-rotate 3s linear infinite;
        }
        
        .satellite {
            position: absolute;
            width: 10px;
            height: 5px;
            background: linear-gradient(90deg, #aaa, #fff);
            border-radius: 2px;
            top: -2.5px;
            left: 50%;
            transform: translateX(-50%);
            box-shadow: 0 0 5px cyan;
        }
        
        /* ดาวหางฮัลเลย์ */
        .halley-comet {
            position: absolute;
            top: -10px;
            left: 50%;
            transform: translateX(-50%);
            width: 30px;
            height: 15px;
            animation: comet-pulse 2s infinite alternate;
        }
        
        .comet-head {
            width: 15px;
            height: 15px;
            background: radial-gradient(circle at center, #ffffff, #66ccff);
            border-radius: 50%;
            box-shadow: 0 0 15px #66ccff;
            position: absolute;
            z-index: 2;
        }
        
        .comet-tail {
            width: 60px;
            height: 5px;
            background: linear-gradient(to right, transparent, #66ccff);
            border-radius: 0 5px 5px 0;
            position: absolute;
            left: 15px;
            top: 5px;
            transform-origin: left center;
            animation: tail-grow 2s infinite alternate;
            filter: blur(1px);
        }
        
        .star {
            position: fixed;
            background: white;
            border-radius: 50%;
            animation: twinkle 2s infinite alternate;
        }
        
        .website-text {
            position: fixed;
            right: 50px;
            bottom: 75px;
            color: white;
            font-size: 24px;
            animation: glow 2s ease-in-out infinite alternate;
        }
        




        /* Audio element styling */
        .audio-element {
            display: none;
        }
        
        /* Play overlay */
        .play-overlay {
            position: fixed;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            background-color: rgba(0,0,0,0.9);
            display: hidden;
            flex-direction: column;
            justify-content: center;
            align-items: center;
            color: white;
            z-index: 1000;
        }
        
        .play-button {
            padding: 15px 30px;
            font-size: 18px;
            background: #5b9eff;
            color: white;
            border: none;
            border-radius: 5px;
            cursor: pointer;
            margin-top: 20px;
        }
        
/* สไตล์ใหม่สำหรับปุ่มควบคุมเพลง */
.music-controls-container {
    position: fixed;
    bottom: 20px;
    left: 0;
    width: 100%;
    display: flex;
    justify-content: center;
    z-index: 1000;
}

.music-controls {
    display: flex;
    align-items: center;
    background: rgba(30, 30, 40, 0.9);
    backdrop-filter: blur(10px);
    border-radius: 50px;
    padding: 8px 20px;
    box-shadow: 0 4px 20px rgba(0, 0, 0, 0.3);
    border: 1px solid rgba(255, 255, 255, 0.1);
}

/* ปุ่มแบบใหม่ */
.music-btn {
    width: 44px;
    height: 44px;
    border: none;
    background: transparent;
    color: white;
    border-radius: 50%;
    margin: 0 5px;
    font-size: 18px;
    cursor: pointer;
    display: flex;
    align-items: center;
    justify-content: center;
    transition: all 0.3s ease;
    position: relative;
    overflow: hidden;
}

.music-btn::before {
    content: '';
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background: rgba(255, 255, 255, 0.1);
    border-radius: 50%;
    transform: scale(0);
    transition: transform 0.3s ease;
}

.music-btn:hover::before {
    transform: scale(1);
}

.music-btn.play-pause {
    background: #5b9eff;
    width: 50px;
    height: 50px;
    font-size: 20px;
    box-shadow: 0 0 15px rgba(91, 158, 255, 0.5);
}

.music-btn.play-pause::before {
    background: rgba(255, 255, 255, 0.2);
}

/* สไตล์ข้อมูลเพลง */
.song-info {
    color: white;
    font-size: 14px;
    margin: 0 15px;
    white-space: nowrap;
    overflow: hidden;
    text-overflow: ellipsis;
    max-width: 200px;
    font-weight: 500;
}

/* สไตล์ควบคุมเสียง */
.volume-control {
    display: flex;
    align-items: center;
    margin-left: 15px;
}

.volume-control span {
    color: white;
    font-size: 16px;
    margin-right: 8px;
}

.volume-slider {
    width: 80px;
    height: 4px;
    -webkit-appearance: none;
    appearance: none;
    background: rgba(255, 255, 255, 0.2);
    border-radius: 2px;
    outline: none;
}

.volume-slider::-webkit-slider-thumb {
    -webkit-appearance: none;
    appearance: none;
    width: 14px;
    height: 14px;
    background: #5b9eff;
    border-radius: 50%;
    cursor: pointer;
    transition: all 0.2s;
}

.volume-slider::-webkit-slider-thumb:hover {
    transform: scale(1.2);
}



    </style>
</head>
<body>
    <!-- Audio element -->
    <audio id="backgroundMusic" class="audio-element">
        <!-- Source will be set by JavaScript -->
    </audio>

    <!-- Play overlay -->
    <div class="play-overlay" id="playOverlay">
        <h2>Welcome to Our Experience</h2>
        <p>For the best experience, we recommend enabling background music</p>
        <button class="play-button" id="playButton">Enable Audio</button>
    </div>

 <div class="solar-system">
        <!-- ดวงอาทิตย์ -->
        <div class="sun"></div>
        
        <!-- วงโคจรของโลก -->
        <div class="earth-orbit">
            <!-- โลกและวัตถุที่โคจรรอบ -->
            <div class="earth-container">
                <div class="earth"></div>
                
                <!-- ดวงจันทร์ -->
                <div class="moon-orbit">
                    <div class="moon"></div>
                </div>
                
                <!-- ดาวเทียมวงโคจรต่ำ -->
                <div class="satellite-orbit">
                    <div class="satellite"></div>
                </div>
            </div>
        </div>
        
        <!-- วงโคจรของดาวพลูโต -->
        <div class="pluto-orbit">
            <div class="ufo">
                <div class="ufo-top"></div>
                <div class="ufo-bottom"></div>
                <div class="ufo-light"></div>
            </div>
        </div>
        
        <!-- วงโคจรดาวหางฮัลเลย์ (วงรี) -->
        <div class="halley-orbit">
            <div class="halley-comet">
                <div class="comet-head"></div>
                <div class="comet-tail"></div>
            </div>
        </div>
        
        <div class="website-text">farmingrobotic.com</div>
    </div>


    <!-- Music controls -->
<div class="music-controls-container">
    <div class="music-controls" id="musicControls">
        <button class="music-btn prev" title="Previous song">
            <svg width="20" height="20" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
                <path d="M19 12H5M12 19l-7-7 7-7"/>
            </svg>
        </button>
        <button class="music-btn play-pause" title="Play/Pause">
            <svg width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
                <path d="M5 3l14 9-14 9V3z" id="play-icon"/>
                <path d="M6 4h4v16H6zm8 0h4v16h-4z" id="pause-icon" style="display:none"/>
            </svg>
        </button>
        <button class="music-btn next" title="Next song">
            <svg width="20" height="20" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
                <path d="M5 12h14M12 5l7 7-7 7"/>
            </svg>
        </button>
        <div class="song-info" id="songInfo">No song playing</div>
        <div class="volume-control">
            <span>🔊</span>
            <input type="range" class="volume-slider" min="0" max="1" step="0.01" value="0.7">
        </div>
    </div>
</div>

    <script>
        document.addEventListener('DOMContentLoaded', function() {


           // สร้างดาวแบบสุ่ม
            const solarSystem = document.querySelector('.solar-system');
            for (let i = 0; i < 300; i++) {
                const star = document.createElement('div');
                star.classList.add('star');
                
                const size = Math.random() * 3 + 1;
                star.style.width = `${size}px`;
                star.style.height = `${size}px`;
                
                star.style.left = `${Math.random() * 100}%`;
                star.style.top = `${Math.random() * 100}%`;
                
                star.style.animationDuration = `${1 + Math.random() * 3}s`;
                star.style.animationDelay = `${Math.random() * 2}s`;
                
                solarSystem.appendChild(star);
            }
            
            // สร้างดาวเทียมเพิ่มเติมแบบสุ่ม
            const earthContainer = document.querySelector('.earth-container');
            for (let i = 0; i < 3; i++) {
                const satOrbit = document.createElement('div');
                satOrbit.className = 'satellite-orbit';
                
                const orbitSize = 60 + Math.random() * 40;
                satOrbit.style.width = `${orbitSize}px`;
                satOrbit.style.height = `${orbitSize}px`;
                satOrbit.style.top = `-${orbitSize/2}px`;
                satOrbit.style.left = `-${orbitSize/2}px`;
                
                satOrbit.style.animationDuration = `${2 + Math.random() * 4}s`;
                
                const satellite = document.createElement('div');
                satellite.className = 'satellite';
                satellite.style.width = `${8 + Math.random() * 4}px`;
                satellite.style.height = `${3 + Math.random() * 2}px`;
                
                satOrbit.appendChild(satellite);
                earthContainer.appendChild(satOrbit);
            }



// สลับไอคอน Play/Pause


            const audio = document.getElementById('backgroundMusic');
            const playOverlay = document.getElementById('playOverlay');
            const playButton = document.getElementById('playButton');
            const musicControls = document.getElementById('musicControls');
            const songInfo = document.getElementById('songInfo');
            const playPauseBtn = document.querySelector('.music-btn.play-pause');
            const playIcon = document.querySelector('#play-icon');
        const pauseIcon = document.querySelector('#pause-icon');
            const prevBtn = document.querySelector('.music-btn.prev');
            const nextBtn = document.querySelector('.music-btn.next');
            const volumeSlider = document.querySelector('.volume-slider');
            
            // ตัวแปรเก็บรายชื่อไฟล์เพลงและสถานะปัจจุบัน
            let musicFiles = [];
            let currentSongIndex = 0;
            let isPlaying = false;
            
            // ตั้งค่าระดับเสียงเริ่มต้น
            audio.volume = 0.7;
            volumeSlider.value = 0.7;
            
playPauseBtn.addEventListener('click', function() {
    if (playIcon.style.display === 'none') {
        playIcon.style.display = 'block';
        pauseIcon.style.display = 'none';
    } else {
        playIcon.style.display = 'none';
        pauseIcon.style.display = 'block';
    }
});

            // ดึงรายชื่อไฟล์เพลงจากเซิร์ฟเวอร์
            async function fetchMusicFiles() {
                try {
                    // ใช้ API ของคุณเองหรือแก้ไขตามโครงสร้างเซิร์ฟเวอร์
                    // ตัวอย่างนี้ใช้การจำลองข้อมูล
                    const response = await fetch('/api/music/files');
                    if (response.ok) {
                        musicFiles = await response.json();
                    } else {
                        // Fallback หาก API ไม่ทำงาน
                        musicFiles = ['FristDemo.mp3', 'FristDemo_b.mp3', 'FristDemo_a.mp3'];
                    }
                    console.log('Loaded music files:', musicFiles);
                } catch (error) {
                    console.error('Failed to fetch music files:', error);
                    musicFiles = ['FristDemo.mp3']; // Fallback ไฟล์เริ่มต้น
                }
            }
            
            // เล่นเพลงตาม index
            async function playSong(index) {
                if (musicFiles.length === 0) return;
                
                // ตรวจสอบขอบเขต index
                if (index < 0) index = musicFiles.length - 1;
                if (index >= musicFiles.length) index = 0;
                
                currentSongIndex = index;
                const song = musicFiles[currentSongIndex];
                
                // อัพเดทข้อมูลเพลง
                songInfo.textContent = song.replace('.mp3', '');
                
                // ตั้งค่าแหล่งเพลงใหม่
                audio.src = `/music/${song}?v=${Date.now()}`;
                
                try {
                    await audio.play();
                    isPlaying = true;
                    playPauseBtn.textContent = '⏸';
                    updateMusicControlsVisibility();
                } catch (error) {
                    console.error('Audio playback failed:', error);
                    isPlaying = false;
                    playPauseBtn.textContent = '▶';
                }
            }
            
            // เล่นเพลงถัดไป
            function playNextSong() {
                playSong(currentSongIndex + 1);
            }
            
            // เล่นเพลงก่อนหน้า
            function playPrevSong() {
                playSong(currentSongIndex - 1);
            }
            
            // ควบคุมการแสดงผลของปุ่มควบคุมเพลง
            function updateMusicControlsVisibility() {
                if (musicFiles.length > 0 && localStorage.getItem('audioPreference') === 'enabled') {
                    musicControls.style.display = 'flex';
                } else {
                    musicControls.style.display = 'none';
                }
            }
            
            // เมื่อเพลงจบ ให้เล่นเพลงถัดไป
            audio.addEventListener('ended', playNextSong);
            
            // เมื่อคลิกปุ่มเล่น/หยุด
            playPauseBtn.addEventListener('click', function() {
                if (isPlaying) {
                    audio.pause();
                    isPlaying = false;
                    playPauseBtn.textContent = '▶';
                } else {
                    audio.play().then(() => {
                        isPlaying = true;
                        playPauseBtn.textContent = '⏸';
                    });
                }
            });
            
            // เมื่อคลิกปุ่มเพลงถัดไป
            nextBtn.addEventListener('click', playNextSong);
            
            // เมื่อคลิกปุ่มเพลงก่อนหน้า
            prevBtn.addEventListener('click', playPrevSong);
            
            // เมื่อปรับระดับเสียง
            volumeSlider.addEventListener('input', function() {
                audio.volume = this.value;
            });
            
            // เมื่อคลิกปุ่มเปิดเพลงครั้งแรก
            playButton.addEventListener('click', async function() {
                try {
                    await fetchMusicFiles();
                    if (musicFiles.length > 0) {
                        await playSong(0);
                        playOverlay.style.display = 'none';
                        localStorage.setItem('audioPreference', 'enabled');
                        updateMusicControlsVisibility();
                    } else {
                        throw new Error('No music files available');
                    }
                } catch (error) {
                    console.error('Audio playback failed:', error);
                    playButton.textContent = 'Error - Click to Try Again';
                }
            });
            
            // ตรวจสอบการตั้งค่าก่อนหน้า
            if (localStorage.getItem('audioPreference') === 'enabled') {
                fetchMusicFiles().then(() => {
                    if (musicFiles.length > 0) {
                        playButton.click();
                    }
                });
            }
            
    
        });
    </script>
</body>
</html>